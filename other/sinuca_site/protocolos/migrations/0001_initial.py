# Generated by Django 5.2.1 on 2025-07-24 23:37

import django.contrib.auth.models
import django.contrib.auth.validators
import django.db.models.deletion
import django.utils.timezone
import uuid
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='GameTable',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('createdAt', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='MessageType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(choices=[('normal', 'Normal'), ('system', 'Sistema'), ('announcement', 'Anúncio'), ('warning', 'Aviso')], max_length=20, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='ModerationSystem',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
            ],
        ),
        migrations.CreateModel(
            name='TableStatus',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(choices=[('available', 'Disponível'), ('occupied', 'Ocupada'), ('maintenance', 'Em Manutenção'), ('reserved', 'Reservada')], max_length=20, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='TableType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(choices=[('pool_8', '8-Ball Pool'), ('pool_9', '9-Ball Pool'), ('snooker', 'Snooker')], max_length=20, unique=True)),
                ('description', models.TextField()),
            ],
        ),
        migrations.CreateModel(
            name='ChatSystem',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('isActive', models.BooleanField(default=True)),
                ('table', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='chat_system', to='protocolos.gametable')),
                ('moderation', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='chat_system', to='protocolos.moderationsystem')),
            ],
        ),
        migrations.AddField(
            model_name='gametable',
            name='status',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='protocolos.tablestatus'),
        ),
        migrations.AddField(
            model_name='gametable',
            name='tableType',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='protocolos.tabletype'),
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('lastLogin', models.DateTimeField(auto_now=True)),
                ('isOnline', models.BooleanField(default=False)),
                ('isHost', models.BooleanField(default=False)),
                ('groups', models.ManyToManyField(blank=True, related_name='protocolos_user_set', to='auth.group')),
                ('user_permissions', models.ManyToManyField(blank=True, related_name='protocolos_user_set', to='auth.permission')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.AddField(
            model_name='moderationsystem',
            name='mutedUsers',
            field=models.ManyToManyField(blank=True, related_name='muted_in_systems', to='protocolos.user'),
        ),
        migrations.AddField(
            model_name='gametable',
            name='players',
            field=models.ManyToManyField(blank=True, related_name='tables', to='protocolos.user'),
        ),
        migrations.CreateModel(
            name='GameSession',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('startTime', models.DateTimeField(auto_now_add=True)),
                ('endTime', models.DateTimeField(blank=True, null=True)),
                ('scorePlayer1', models.IntegerField(default=0)),
                ('scorePlayer2', models.IntegerField(default=0)),
                ('table', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='sessions', to='protocolos.gametable')),
                ('currentPlayer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='current_sessions', to='protocolos.user')),
                ('player1', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='sessions_as_player1', to='protocolos.user')),
                ('player2', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='sessions_as_player2', to='protocolos.user')),
                ('winner', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='won_sessions', to='protocolos.user')),
            ],
        ),
        migrations.CreateModel(
            name='ChatMessage',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('content', models.TextField()),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('isPinned', models.BooleanField(default=False)),
                ('chat_system', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='messages', to='protocolos.chatsystem')),
                ('type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='protocolos.messagetype')),
                ('sender', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='sent_messages', to='protocolos.user')),
            ],
            options={
                'ordering': ['-timestamp'],
            },
        ),
    ]
